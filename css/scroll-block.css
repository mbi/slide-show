
/* Canvas */

[part="grid"] {
    position: relative;
    display: grid;
    padding: 0;
    margin: 0;

    scroll-snap-type: x mandatory;
    scroll-snap-stop: always;
    -webkit-scroll-behavior: smooth;
            scroll-behavior: smooth;

    padding-left: var(--padding-left);
    padding-right: var(--padding-right);
    scroll-padding-left: var(--padding-left);
    scroll-padding-right: var(--padding-right);

    overflow: scroll;
    overflow-y: hidden;
    overscroll-behavior-x: contain;
    -ms-overflow-style: none; /* IE 11 */
    scrollbar-width: none; /* Firefox 64 */

    will-change: -webkit-scroll-behavior;
    will-change: scroll-behavior;
}

[part="grid"].gesturing {
    /* Neuter scroll sticking while finger dragging */
    scroll-snap-type: none !important;
    scroll-snap-stop: normal !important;
    -webkit-scroll-behavior: auto;
            scroll-behavior: auto;
}

[part="grid"]::after {
    /* This is a hack fix for the fact that scroll-snapped grids do not scroll
       to the extent of their right padding (or indeed to any of their right
       padding). Note that this doesn't work with --padding-right based on
       percentages, as the dimensions do not refer to the same parent. The
       snag is that if --padding-right is less than --column-gap we still get
       a whole --column-gap's 'padding' caused by the column-gap in front of
       this :after element. */
    content: '';
    /*position: absolute;*/
    grid-column: calc(var(--children-count) + 1);
    grid-row: 1;
    padding-right: calc(var(--padding-right) - var(--column-gap));
    width: 0px;
    height: 100%;
    top: 0;
    bottom: 0;
    align-self: stretch;
    background-color: transparent;
    z-index: 40;
    width: 0px;
    min-width:  1px;
    /* background-color:  red; */
}

:host([loop]) > [part="grid"]::after {
    background-color: transparent !important;
    /* There are 3 x as many slides in loop mode, as the same number are
       added to the front and to the back */
    grid-column: calc(3 * var(--children-count) + 1);
}

[part="grid"]::-webkit-scrollbar {
    /* Not convinced this is necessary */
    -webkit-appearance: none;
    /* Hide scrollbar by default */
    display:       var(--webkit-scrollbar-display, none);
    width:         var(--webkit-scrollbar-width);
    height:        var(--webkit-scrollbar-width);
    background:    var(--webkit-scrollbar-background);
    border:        var(--webkit-scrollbar-border);
    border-radius: var(--webkit-scrollbar-border-radius);
}

[part="grid"]::-webkit-scrollbar-thumb:vertical,
[part="grid"]::-webkit-scrollbar-thumb:horizontal {
    background:    var(--webkit-scrollbar-thumb-background);
    border:        var(--webkit-scrollbar-thumb-border);
    border-radius: var(--webkit-scrollbar-thumb-border-radius);
}

[part="grid"]::slotted(*) {
    scroll-snap-align: center;
}

.loading :host > [part="grid"] {
    /* During loading make scrolling instant */
    -webkit-scroll-behavior: auto;
            scroll-behavior: auto;
}
